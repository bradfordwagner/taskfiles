---
version: '3'

description: |
  This is used to write secrets to the repo

vars:
  env_secrets_file: "{{ .USER_WORKING_DIR }}/.secrets.sh"

env:
  VAULT_ADDR: https://bradfordwagner.com:8200
  VAULT_FORMAT: json
  kv2_prefix: secret/gh

tasks:
  status:
    desc: |
      prints the status of the vault
    cmds:
      - vault status | jq
  clean_env_file:
    silent: true
    desc: |
      removes the secrets file
    cmds:
      - cmd: rm {{ .env_secrets_file }}
        ignore_error: true
  kv2_env:
    # silent: true
    desc: |
      reads a secret from vault
    vars:
      path: '{{ default "secret/azure/sp/infra" .path }}'
    cmds:
      - |
        json_data=$(vault kv get {{ .path }}  | jq -r '.data.data')
        echo ${json_data} | jq -r 'to_entries | map("export \(.key)=\(.value | @sh)") | .[]' > {{ .env_secrets_file }}

  generate_approle:
    desc: |
      generates approle
    vars:
      role: '{{ default "gh_terraform" .role }}'
      ttl: '{{ default "10s" .ttl }}'
    env:
      role: '{{ .role }}'
      ttl: '{{ .ttl }}'
    cmds:
      - |
        cd {{ .USER_WORKING_DIR }}
        set -x
        role_id=$(vault read auth/approle/role/${role}/role-id -format=json | jq '.data.role_id' -r)
        secret_id=$(vault write auth/approle/role/${role}/secret-id ttl=${ttl} | jq '.data.secret_id' -r)
        cat <<EOF > {{ .env_secrets_file }}
        export role_id=${role_id}
        export secret_id=${secret_id}
        EOF
        vault write auth/approle/login role_id=${role_id} secret_id=${secret_id} -format=json | jq
