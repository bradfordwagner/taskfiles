---
version: '3'

description: |
  This is used to run docker builds on gh actions

vars:
  is_tag: false

tasks:
  init:
    desc: |
      This task is used to create the config.yaml file to initialize custom builds
    cmds:
      - |
        cat <<EOF > {{ .USER_WORKING_DIR }}/config.yaml
        # created by init task for use with github actons
        target_repo: quay.io/bradfordwagner/ansible
        upstreams:
          - { repo: quay.io/bradfordwagner/base:3.0.0-alpine_3.18      , platforms: [linux/amd64        , linux/arm64] }
          # - { repo: quay.io/bradfordwagner/base:3.0.0-alpine_3.19      , platforms: [linux/amd64        , linux/arm64] }
          # - { repo: quay.io/bradfordwagner/base:3.0.0-archlinux_latest , platforms: [linux/amd64    ] }
          # - { repo: quay.io/bradfordwagner/base:3.0.0-debian_bookworm  , platforms: [linux/amd64        , linux/arm64] }
          # - { repo: quay.io/bradfordwagner/base:3.0.0-debian_bullseye  , platforms: [linux/amd64        , linux/arm64] }
          # - { repo: quay.io/bradfordwagner/base:3.0.0-ubuntu_mantic    , platforms: [linux/amd64        , linux/arm64] }
          # - { repo: quay.io/bradfordwagner/base:3.0.0-ubuntu_noble     , platforms: [linux/amd64        , linux/arm64] }
        EOF
      - |
        file={{ .USER_WORKING_DIR }}/generate_dockerfile.sh
        cat <<EOF > ${file}
        # this is used to generate a docker file in the build task
        # input 0 is expected to be the nth upstream item
        v=\$1
        cat <<FOF
        RUN echo hello world=\$v
        FOF
        EOF
        chmod +x ${file}
  build:
    desc: |
      This task is used to build the docker images
    vars:
      # comma separated ist of platforms to build
      repo: '{{ default "quay.io/bradfordwagner/base:3.0.0-alpine_3.18" .repo }}'
      platforms: '{{ default "linux/amd64" .platforms }}'
      target_repo: '{{ default "quay.io/bradfordwagner/test" .target_repo }}'
      target_tag: '{{ default "latest" .target_tag }}'
      use_cache: '{{ default "false" .use_cache }}'
      progress: '{{ default "plain" .progress }}'
      v: '{{ default "{}" .v }}'
    cmds:
      - |
        {{- $tag := eq "true" .is_tag | ternary "--push" " " }}
        {{- $use_cache := eq "true" .use_cache | ternary "" "--no-cache" }}
        cd {{ .USER_WORKING_DIR }}
        set -x
        generate_dockerfile=$(. generate_dockerfile.sh '{{ .v }}')
        echo "
        FROM {{ .repo }}
        RUN mkdir /src
        WORKDIR /src
        COPY . .
        RUN ls -lha
        ${generate_dockerfile}
        " | docker buildx build --progress={{ .progress }} {{ $use_cache }} --platform {{ .platforms }} -t {{ .target_repo }}:{{ .target_tag }} {{ $tag }} -
