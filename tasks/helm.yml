---
version: '3'

description: |
  task helper for helm

tasks:
  lint:
    cmds:
      - helm lint {{ .USER_WORKING_DIR }}
  template:
    vars:
      pipe_bat: '{{ default "false" .pipe_bat }}'
    cmds:
      - |
        [[ "true" == "{{ .pipe_bat }}" ]] && helm template {{ default "release-name" .release_name }} {{ .USER_WORKING_DIR }} | bat -P -lyaml
        [[ "false" == "{{ .pipe_bat }}" ]] && helm template {{ default "release-name" .release_name }} {{ .USER_WORKING_DIR }}
  dependencies:
    desc: installs helm dependencies
    vars:
      cleanup: '{{ default "true" .cleanup }}'
    cmds:
      - cmd: |
          [[ "true" == "{{ .cleanup }}" ]] && rm -rf {{ .USER_WORKING_DIR}}/charts {{ .USER_WORKING_DIR }}/Chart.lock
        ignore_error: true
      - cd {{ .USER_WORKING_DIR }} && helm dependency build
  registry_login:
    desc: logs into helm registry
    vars:
      helm_registry: "{{ .helm_registry }}"
      password: "{{ .password }}"
    cmds:
      - echo {{ .password }} | helm registry login {{ .helm_registry }} --username $(whoami) --password-stdin
  push_oci:
    desc: pushes oci image to registry
    vars:
      tarball: "{{ .tarball }}"
      oci_name: "{{ .oci_name }}"
      oci_path: "{{ .oci_path }}"
      oci_version: "{{ .oci_version }}"
      helm_registry: "{{ .helm_registry }}"
    cmds:
      - cmd: |
          set -x
          chart_url=oci://{{ .helm_registry }}/{{ .oci_path }}

          # push to registry
          if helm show chart "$chart_url/{{ .oci_name }}" --version "{{ .oci_version }}" --repository-config '' > /dev/null; then
            echo "$chart_url:{{ .oci_version }} already exists, skipping"
          else
            helm push "{{ .tarball }}" "$chart_url"
          fi
  default:
    cmds:
      - task: dependencies
      - task: lint
      - task: template
